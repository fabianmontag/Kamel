// Generated by js_of_ocaml
//# buildInfo:effects=disabled, kind=cma, use-js-string=true, version=6.2.0

//# unitInfo: Provides: Ppx_derivers
//# unitInfo: Requires: Stdlib, Stdlib__Hashtbl, Stdlib__Printf
//# shape: Ppx_derivers:[F(2),F(1),F(1)]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) === 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) === 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib = global_data.Stdlib,
    Stdlib_Printf = global_data.Stdlib__Printf,
    all = caml_call2(Stdlib_Hashtbl[1], 0, 42),
    a =
      [0,
       [11,
        "Ppx_deriviers.register: ",
        [3, 0, [11, " is already registered", 0]]],
       "Ppx_deriviers.register: %S is already registered"];
   function register(name, deriver){
    if(caml_call2(Stdlib_Hashtbl[9], all, name))
     caml_call3(Stdlib_Printf[10], Stdlib[2], a, name);
    return caml_call3(Stdlib_Hashtbl[5], all, name, deriver);
   }
   function lookup(name){
    try{var drv = caml_call2(Stdlib_Hashtbl[6], all, name);}
    catch(exn$0){
     var exn = caml_wrap_exception(exn$0);
     if(exn === Stdlib[8]) return 0;
     throw caml_maybe_attach_backtrace(exn, 0);
    }
    return [0, drv];
   }
   function derivers(param){
    return caml_call3
            (Stdlib_Hashtbl[14],
             function(name, drv, acc){return [0, [0, name, drv], acc];},
             all,
             0);
   }
   var Ppx_derivers = [0, register, lookup, derivers];
   runtime.caml_register_global(4, Ppx_derivers, "Ppx_derivers");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X2Rlcml2ZXJzLmNtYS5qcyIsInNlY3Rpb25zIjpbeyJvZmZzZXQiOnsibGluZSI6MTAsImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X2Rlcml2ZXJzLmNtYS5qcyIsInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvVXNlcnMvZmFiaWFuLy5vcGFtL2RlZmF1bHQvbGliL3BweF9kZXJpdmVycy9wcHhfZGVyaXZlcnMubWwiXSwic291cmNlc0NvbnRlbnQiOlsiKCogZ2VuZXJhdGVkIGNvZGUgKikiLCJ0eXBlIGRlcml2ZXIgPSAuLlxuXG5sZXQgYWxsID0gSGFzaHRibC5jcmVhdGUgNDJcblxubGV0IHJlZ2lzdGVyIG5hbWUgZGVyaXZlciA9XG4gIGlmIEhhc2h0YmwubWVtIGFsbCBuYW1lIHRoZW5cbiAgICBQcmludGYua3NwcmludGYgZmFpbHdpdGhcbiAgICAgIFwiUHB4X2Rlcml2aWVycy5yZWdpc3RlcjogJVMgaXMgYWxyZWFkeSByZWdpc3RlcmVkXCIgbmFtZTtcbiAgSGFzaHRibC5hZGQgYWxsIG5hbWUgZGVyaXZlclxuXG5sZXQgbG9va3VwIG5hbWUgPVxuICBtYXRjaCBIYXNodGJsLmZpbmQgYWxsIG5hbWUgd2l0aFxuICB8IGRydiAtPiBTb21lIGRydlxuICB8IGV4Y2VwdGlvbiBOb3RfZm91bmQgLT4gTm9uZVxuXG5sZXQgZGVyaXZlcnMgKCkgPVxuICBIYXNodGJsLmZvbGQgKGZ1biBuYW1lIGRydiBhY2MgLT4gKG5hbWUsIGRydikgOjogYWNjKSBhbGwgW11cbiJdLCJuYW1lcyI6WyJydW50aW1lIiwiY2FtbF9tYXliZV9hdHRhY2hfYmFja3RyYWNlIiwiY2FtbF93cmFwX2V4Y2VwdGlvbiIsImNhbWxfY2FsbDIiLCJmIiwiYTAiLCJhMSIsImNhbWxfY2FsbDMiLCJhMiIsImdsb2JhbF9kYXRhIiwiU3RkbGliX0hhc2h0YmwiLCJTdGRsaWIiLCJTdGRsaWJfUHJpbnRmIiwiYWxsIiwicmVnaXN0ZXIiLCJuYW1lIiwiZGVyaXZlciIsImxvb2t1cCIsImRydiIsImV4biIsImRlcml2ZXJzIiwicGFyYW0iLCJhY2MiLCJQcHhfZGVyaXZlcnMiXSwibWFwcGluZ3MiOiJJQUFBQSxVQUFBO0FBQUEsSUFBQUMsOEJBQUE7QUFBQSxJQUFBQyxzQkFBQTtBQUFBLFlBQUFDLFdBQUFDLEdBQUFDLElBQUFDO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxXQUFBSCxHQUFBQyxJQUFBQyxJQUFBRTtBQUFBQSxJQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFBQyxjQUFBO0FBQUEsSUFBQUMsaUJBQUE7QUFBQSxJQUFBQyxTQUFBO0FBQUEsSUFBQUMsZ0JBQUE7QUFBQSxJQUFBQyxNQ0VVO0FBQUE7QUFBQSxNQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBQUMsU0FBQUMsTUFBQUM7QUFBQUEsSUFHdEI7QUFBQSxLQUNEO0FBQUEsSUFFRix3REFBNEI7QUFBQTtBQUFBLFlBQUFDLE9BQUFGO0FBQUFBLElBRzVCLFFBQUFHLE1BQU07QUFBQSxVQUFBQztBQUFBQSxTQUFBQSxNRFhSO0FBQUEsMkJDYTJCO0FBQUEsS0RiM0I7QUFBQTtBQUFBLElDWVc7QUFBQSxHQUNvQjtBQUFBLFlBQUFDLFNBQUFDO0FBQUFBLElBRzdCO0FBQUE7QUFBQSxzQkFBQU4sTUFBQUcsS0FBQUksS0FBa0MsZ0NBQWtCO0FBQUE7QUFBQSxlQUFRO0FBQUE7QUFBQSxPQUFBQyxlQWRuQztBQUFBO0FBQUE7QUFBQSxFREYzQiIsImlnbm9yZUxpc3QiOlswXX19XX0=
